"""
Django settings for BTsite project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'th#)@n14i93_690ji!r_q7^m_ol*v!%n5_651w%+t%qbt3u1!@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'Btapp', # hay que agregar la aplicacion
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',  # busca los archivos estaticos automaticamente cunado usas runserver when DEBUG = True

    'crispy_forms', # para usar bootstrap en las vistas de los formularios hay que installar el modulo: pip install django-crispy-forms
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'BTsite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BTsite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOGIN_URL = '/login/' # asociamos el login del sitio al url '/login/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
STATIC_URL = '/static/' #  this will be used as the base path for asset definitions (theMediaclass) and the staticfiles app.

# In addition to using a static/ directory inside your apps, you can define a list of directories (STATICFILES_DIRS) 
# in your settings file where Django will also look for static files
# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')] # NO uso otra carpeta para guardar statics asi que agregarlo no cambia nada

# Igual que STATICFILES_DIRS sirve para buscar otros templates fuera de la app
# TEMPLATE_DIRS = (os.path.join(os.path.dirname(__file__), 'template').replace('\\','/'),) # Agregarlo tampoco cambia nada

# Full path to a directory where store uploaded files. These files are not stored in the database, 
# all that will be stored in your database is a path to the file
MEDIA_ROOT = BASE_DIR / Path('Btapp/static/Btapp') #os.path.join(BASE_DIR, 'Btapp/static/uploads') 
MEDIA_URL = '/uploads/' # as the base public URL of that directory

# SendGrid
SENDGRID_API_KEY = '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'
EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_HOST_USER = 'apikey' # this is exactly the value 'apikey'
EMAIL_HOST_PASSWORD = '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'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
DEFAULT_FROM_EMAIL = 'fausten17@hotmail.com' # tiene que ser el correo que diste en sendgrid (no el usuario: 'falsodonfalso@gmail.com') 

# The absolute path to the directory where collectstatic will collect static files for deployment. STATIC_ROOT looks in all 
# locations defined in STATICFILES_DIRS and in the 'static' directory of apps specified
#STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') 
